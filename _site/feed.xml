<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/mental_changelog.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/mental_changelog.github.io/" rel="alternate" type="text/html" /><updated>2023-11-27T14:58:49-05:00</updated><id>http://localhost:4000/mental_changelog.github.io/feed.xml</id><title type="html">Mental Changelog</title><subtitle>Mainly a brain dump about things I encounter while working. Otherwise, I probably would forget them...</subtitle><entry><title type="html">Review of CS 464 - Open Source Software</title><link href="http://localhost:4000/mental_changelog.github.io/coursework/2023/11/27/review-of-cs-464.html" rel="alternate" type="text/html" title="Review of CS 464 - Open Source Software" /><published>2023-11-27T00:00:00-05:00</published><updated>2023-11-27T00:00:00-05:00</updated><id>http://localhost:4000/mental_changelog.github.io/coursework/2023/11/27/review-of-cs-464</id><content type="html" xml:base="http://localhost:4000/mental_changelog.github.io/coursework/2023/11/27/review-of-cs-464.html">&lt;p&gt;I recently had the opportunity to take CS 464 Open Source Software as an eCampus student at Oregon State University. 
I liked this class so much that I decided to write a review about it.&lt;/p&gt;

&lt;h3 id=&quot;course-structure&quot;&gt;Course Structure&lt;/h3&gt;

&lt;p&gt;The course consisted of 4 short quizzes, weekly discussions, and a Final Portfolio assignment. 
One thing I enjoyed about the course structure is that it was minimal. 
The flexible requirements allowed me to delve deeper into whatever open-source project I wanted.&lt;/p&gt;

&lt;h3 id=&quot;assignments&quot;&gt;Assignments&lt;/h3&gt;

&lt;p&gt;The assignments are mainly designed to make sure you are making progress toward your portfolio assignment and just generally interacting with open-source projects. 
Moreover, you had to submit a proposal beforehand for each assignment, which essentially was a draft.
The proposals did a great job at keeping me on track personally. 
I struggle with starting tasks, so having these checkpoints was invaluable.&lt;/p&gt;

&lt;h3 id=&quot;discussions&quot;&gt;Discussions&lt;/h3&gt;

&lt;p&gt;The discussions served as additional check-ins, had some reading about open source, and let you explore open-source projects.&lt;/p&gt;

&lt;h3 id=&quot;portfolio-project&quot;&gt;Portfolio Project&lt;/h3&gt;

&lt;p&gt;For your portfolio project, you had to contribute a significant change to an open-source project. 
I decided to contribute to a project I already used called homepage. 
Homepage allows you to create dashboards for your homelab.&lt;/p&gt;

&lt;p&gt;One of the features that I like is that you can configure your dashboard from a docker-compose file. 
However, the docker integration lacked support to configure bookmarks from the compose file. 
I was able to write this feature, and I am hoping to get it merged in soon. 
You can see my pull request &lt;a href=&quot;https://github.com/gethomepage/homepage/pull/2367#issuecomment-1827150820&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;If you are looking for an excuse to contribute to open-source, this course is for you. 
I have made open-source contributions in the past, but I needed more structure to ensure I made more significant contributions. 
This class has reignited my passion for open-source, and I am very thankful I took it.&lt;/p&gt;</content><author><name></name></author><category term="coursework" /><summary type="html">I recently had the opportunity to take CS 464 Open Source Software as an eCampus student at Oregon State University. I liked this class so much that I decided to write a review about it.</summary></entry><entry><title type="html">Unit testing a widget library</title><link href="http://localhost:4000/mental_changelog.github.io/unit-testing/2022/02/24/unit-testing-widgets.html" rel="alternate" type="text/html" title="Unit testing a widget library" /><published>2022-02-24T00:00:00-05:00</published><updated>2022-02-24T00:00:00-05:00</updated><id>http://localhost:4000/mental_changelog.github.io/unit-testing/2022/02/24/unit-testing-widgets</id><content type="html" xml:base="http://localhost:4000/mental_changelog.github.io/unit-testing/2022/02/24/unit-testing-widgets.html">&lt;p&gt;I recently was working on a widget library in python. Without getting into too much detail, one thing that plagued me was, &lt;strong&gt;how do I want to unit test this?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I recently stumbled onto &lt;a href=&quot;https://github.com/lvgl/lvgl&quot;&gt;lvgl&lt;/a&gt;, which in all honesty is everything I want my library to be.&lt;/p&gt;

&lt;p&gt;It it light weight, has similar widgets, and is geared towards the embedded space. Futhermore, it unit tests all of its widgets in a format that I like.&lt;/p&gt;

&lt;p&gt;I particularly like the way it compares the widgets to screenshots for testing. This post if nothing else will serve as a reminder/inspiration to actually continue working on the widget library.&lt;/p&gt;</content><author><name></name></author><category term="unit-testing" /><summary type="html">I recently was working on a widget library in python. Without getting into too much detail, one thing that plagued me was, how do I want to unit test this?</summary></entry></feed>